v0 = 0
f_QuickSort [3] [50]
store a0 0
store a1 1
store a2 2
load 1 t1
load 2 t2
t0 = t1 < t2
store t0 8
load 8 t0
if t0 == x0 goto l3
goto l0
l3:
goto l1
l0:
load 1 t0
store t0 9
load 2 t0
store t0 10
store x0 12
load 1 t1
t2 = 4
t0 = t1 * t2
store t0 13
load 12 t1
load 13 t2
t0 = t1 + t2
store t0 12
load 0 t3
load 12 t4
t5 = t3 + t4
t0 = t5[0]
store t0 14
load 14 t0
store t0 11
l4:
load 9 t1
load 10 t2
t0 = t1 < t2
store t0 15
load 15 t0
if t0 == x0 goto l7
goto l5
l7:
goto l6
l5:
l8:
load 9 t1
load 10 t2
t0 = t1 < t2
store t0 16
load 16 t0
if t0 == x0 goto l11
store x0 17
load 10 t1
t2 = 4
t0 = t1 * t2
store t0 18
load 17 t1
load 18 t2
t0 = t1 + t2
store t0 17
load 0 t3
load 17 t4
t5 = t3 + t4
t0 = t5[0]
store t0 19
load 11 t1
t2 = 1
t0 = t1 - t2
store t0 20
load 19 t1
load 20 t2
t0 = t1 > t2
store t0 21
load 21 t0
if t0 == x0 goto l11
goto l9
l11:
goto l10
l9:
load 10 t1
t2 = 1
t0 = t1 - t2
store t0 22
load 22 t0
store t0 10
goto l8
l10:
load 9 t1
load 10 t2
t0 = t1 < t2
store t0 23
load 23 t0
if t0 == x0 goto l15
goto l12
l15:
goto l13
l12:
store x0 24
load 9 t1
t2 = 4
t0 = t1 * t2
store t0 25
load 24 t1
load 25 t2
t0 = t1 + t2
store t0 24
store x0 26
load 10 t1
t2 = 4
t0 = t1 * t2
store t0 27
load 26 t1
load 27 t2
t0 = t1 + t2
store t0 26
load 0 t3
load 26 t4
t5 = t3 + t4
t0 = t5[0]
store t0 28
load 28 t0
load 0 t3
load 24 t4
t5 = t3 + t4
t5[0] = t0
load 9 t1
t2 = 1
t0 = t1 + t2
store t0 29
load 29 t0
store t0 9
l13:
l16:
load 9 t1
load 10 t2
t0 = t1 < t2
store t0 30
load 30 t0
if t0 == x0 goto l19
store x0 31
load 9 t1
t2 = 4
t0 = t1 * t2
store t0 32
load 31 t1
load 32 t2
t0 = t1 + t2
store t0 31
load 0 t3
load 31 t4
t5 = t3 + t4
t0 = t5[0]
store t0 33
load 33 t1
load 11 t2
t0 = t1 < t2
store t0 34
load 34 t0
if t0 == x0 goto l19
goto l17
l19:
goto l18
l17:
load 9 t1
t2 = 1
t0 = t1 + t2
store t0 35
load 35 t0
store t0 9
goto l16
l18:
load 9 t1
load 10 t2
t0 = t1 < t2
store t0 36
load 36 t0
if t0 == x0 goto l23
goto l20
l23:
goto l21
l20:
store x0 37
load 10 t1
t2 = 4
t0 = t1 * t2
store t0 38
load 37 t1
load 38 t2
t0 = t1 + t2
store t0 37
store x0 39
load 9 t1
t2 = 4
t0 = t1 * t2
store t0 40
load 39 t1
load 40 t2
t0 = t1 + t2
store t0 39
load 0 t3
load 39 t4
t5 = t3 + t4
t0 = t5[0]
store t0 41
load 41 t0
load 0 t3
load 37 t4
t5 = t3 + t4
t5[0] = t0
load 10 t1
t2 = 1
t0 = t1 - t2
store t0 42
load 42 t0
store t0 10
l21:
goto l4
l6:
store x0 43
load 9 t1
t2 = 4
t0 = t1 * t2
store t0 44
load 43 t1
load 44 t2
t0 = t1 + t2
store t0 43
load 11 t0
load 0 t3
load 43 t4
t5 = t3 + t4
t5[0] = t0
load 9 t1
t2 = 1
t0 = t1 - t2
store t0 46
load 46 t0
store t0 45
load 0 a0
load 1 a1
load 45 a2
call f_QuickSort
store a0 47
load 47 t0
store t0 45
load 9 t1
t2 = 1
t0 = t1 + t2
store t0 48
load 48 t0
store t0 45
load 0 a0
load 45 a1
load 2 a2
call f_QuickSort
store a0 49
load 49 t0
store t0 45
l1:
a0 = 0
return
return
end f_QuickSort
f_main [0] [27]
t0 = 10
loadaddr v0 t3
t3[0] = t0
t0 = 4
loadaddr 8 t3
t3[0] = t0
t0 = 3
loadaddr 8 t3
t3[4] = t0
t0 = 9
loadaddr 8 t3
t3[8] = t0
t0 = 2
loadaddr 8 t3
t3[12] = t0
t0 = 0
loadaddr 8 t3
t3[16] = t0
t0 = 1
loadaddr 8 t3
t3[20] = t0
t0 = 6
loadaddr 8 t3
t3[24] = t0
t0 = 5
loadaddr 8 t3
t3[28] = t0
t0 = 7
loadaddr 8 t3
t3[32] = t0
t0 = 8
loadaddr 8 t3
t3[36] = t0
t0 = 0
store t0 18
t0 = 9
store t0 19
loadaddr 8 a0
load 18 a1
load 19 a2
call f_QuickSort
store a0 20
load 20 t0
store t0 18
l24:
load 18 t1
load v0 t2
t0 = t1 < t2
store t0 21
load 21 t0
if t0 == x0 goto l27
goto l25
l27:
goto l26
l25:
store x0 23
load 18 t1
t2 = 4
t0 = t1 * t2
store t0 24
load 23 t1
load 24 t2
t0 = t1 + t2
store t0 23
loadaddr 8 t3
load 23 t4
t5 = t3 + t4
t0 = t5[0]
store t0 25
load 25 t0
store t0 22
load 22 a0
call f_putint
t0 = 10
store t0 22
load 22 a0
call f_putch
load 18 t1
t2 = 1
t0 = t1 + t2
store t0 26
load 26 t0
store t0 18
goto l24
l26:
a0 = 0
return
return
end f_main
