v0 = malloc 48
f_main [0] [22]
t0 = 0
store t0 8
t0 = 0
store t0 9
l0:
load 8 t1
t2 = 5
t0 = t1 <= t2
store t0 10
load 10 t0
if t0 == x0 goto l3
goto l1
l3:
goto l2
l1:
load 8 t0
store t0 11
l4:
load 11 t1
t2 = 0
t0 = t1 >= t2
store t0 12
load 12 t0
if t0 == x0 goto l7
goto l5
l7:
goto l6
l5:
load 11 t1
t2 = 4
t0 = t1 < t2
store t0 13
load 13 t0
if t0 == x0 goto l11
load 8 t1
load 11 t2
t0 = t1 - t2
store t0 14
load 14 t1
t2 = 3
t0 = t1 < t2
store t0 15
load 15 t0
if t0 == x0 goto l11
goto l8
l11:
goto l9
l8:
load 8 t1
load 11 t2
t0 = t1 - t2
store t0 16
store x0 17
load 16 t1
t2 = 16
t0 = t1 * t2
store t0 18
load 17 t1
load 18 t2
t0 = t1 + t2
store t0 17
load 11 t1
t2 = 4
t0 = t1 * t2
store t0 19
load 17 t1
load 19 t2
t0 = t1 + t2
store t0 17
load 9 t0
loadaddr v0 t3
load 17 t4
t5 = t3 + t4
t5[0] = t0
t0 = 1
store t0 9
l9:
load 11 t1
t2 = 1
t0 = t1 - t2
store t0 20
load 20 t0
store t0 11
goto l4
l6:
load 8 t1
t2 = 1
t0 = t1 + t2
store t0 21
load 21 t0
store t0 8
goto l0
l2:
a0 = 0
return
return
end f_main
