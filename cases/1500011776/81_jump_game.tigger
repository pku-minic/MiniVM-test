f_canJump [2] [48]
    load 2 t0
    t1 = 1
    t0 = a1 == t1
    store t0 2
    store a0 0
    store a1 1
    if t0 == x0 goto l0
    a0 = 1
    return
l0:
    load 3 t0
    t0 = 0
    load 4 t1
    load 0 t2
    t3 = t2 + t0
    t1 = t3 [0]
    load 5 t4
    load 1 t5
    t4 = t5 + -2
    load 6 t6
    t6 = t1 > t4
    store t6 6
    if t6 == x0 goto l1
    a0 = 1
    return
l1:
    load 17 t0
    t0 = 0
    store t0 17
l2:
    load 18 t0
    load 1 t1
    t0 = t1 + -1
    load 19 t2
    load 17 t3
    t2 = t3 < t0
    store t2 19
    if t2 == x0 goto l3
    load 20 t0
    load 17 t1
    t2 = 4
    t0 = t2 * t1
    loadaddr 7 t3
    t4 = t3 + t0
    t4 [0] = x0
    load 21 t5
    t5 = t1 + 1
    t1 = t5
    store t1 17
    goto l2
l3:
    load 22 t0
    load 1 t1
    t0 = t1 + -1
    load 23 t2
    t3 = 4
    t2 = t3 * t0
    loadaddr 7 t4
    t5 = 1
    t6 = t4 + t2
    t6 [0] = t5
    load 24 s1
    s1 = t1 + -2
    load 17 s2
    s2 = s1
    store s1 24
    store s2 17
l4:
    load 25 t0
    t0 = -1
    load 26 t1
    load 17 t2
    t1 = t2 > t0
    store t1 26
    if t1 == x0 goto l5
    load 28 t0
    load 17 t1
    t2 = 4
    t0 = t2 * t1
    load 29 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 30 t6
    load 1 s1
    t6 = s1 + -1
    load 31 s2
    s2 = t6 - t1
    load 32 s3
    s3 = t3 < s2
    store s3 32
    if s3 == x0 goto l6
    load 33 t0
    load 17 t1
    t2 = 4
    t0 = t2 * t1
    load 34 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 27 t6
    t6 = t3
    store t6 27
    goto l7
l6:
    load 35 t0
    load 1 t1
    t0 = t1 + -1
    load 36 t2
    load 17 t3
    t2 = t0 - t3
    load 27 t4
    t4 = t2
    store t2 36
    store t4 27
    store t4 27
l7:
l8:
    load 37 t0
    t0 = -1
    load 38 t1
    load 27 t2
    t1 = t2 > t0
    store t1 38
    if t1 == x0 goto l9
    load 39 t0
    load 17 t1
    load 27 t2
    t0 = t1 + t2
    load 40 t3
    t4 = 4
    t3 = t4 * t0
    load 41 t5
    loadaddr 7 t6
    s1 = t6 + t3
    t5 = s1 [0]
    load 42 s2
    s2 = t5 != x0
    store s2 42
    if s2 == x0 goto l10
    load 43 t0
    load 17 t1
    t2 = 4
    t0 = t2 * t1
    loadaddr 7 t3
    t4 = 1
    t5 = t3 + t0
    t5 [0] = t4
    store t0 43
l10:
    load 44 t0
    load 27 t1
    t0 = t1 + -1
    t1 = t0
    store t1 27
    goto l8
l9:
    load 45 t0
    load 17 t1
    t0 = t1 + -1
    t1 = t0
    store t1 17
    goto l4
l5:
    load 46 t0
    t0 = 0
    load 47 t1
    loadaddr 7 t2
    t3 = t2 + t0
    t1 = t3 [0]
    a0 = t1
    store t1 47
    return
end f_canJump
f_main [0] [22]
    load 11 t0
    t0 = 0
    loadaddr 1 t1
    t2 = 3
    t3 = t1 + t0
    t3 [0] = t2
    load 12 t4
    t4 = 4
    t5 = 3
    t6 = t1 + t4
    t6 [0] = t5
    load 13 s1
    s1 = 8
    s2 = 9
    s3 = t1 + s1
    s3 [0] = s2
    load 14 s4
    s4 = 12
    s5 = t1 + s4
    s5 [0] = x0
    load 15 s6
    s6 = 16
    s7 = t1 + s6
    s7 [0] = x0
    load 16 s8
    s8 = 20
    s9 = 1
    s10 = t1 + s8
    s10 [0] = s9
    load 17 s11
    s11 = 24
    a0 = 1
    a1 = t1 + s11
    a1 [0] = a0
    load 18 a2
    a2 = 28
    a3 = 5
    a4 = t1 + a2
    a4 [0] = a3
    load 19 a5
    a5 = 32
    a6 = 7
    a7 = t1 + a5
    a7 [0] = a6
    load 20 t0
    t0 = 36
    t2 = 8
    t3 = t1 + t0
    t3 [0] = t2
    load 0 t0
    t0 = 10
    a0 = t1
    a1 = t0
    store t0 0
    call f_canJump
    load 0 t0
    t0 = a0
    a0 = t0
    store t0 0
    return
end f_main
