var T0 // n
f_swap [3]
    var T1 // temp
    var t0
    t0 = 4 * p1
    var t1
    t1 = p0[t0]
    T1 = t1
    var t2
    t2 = 4 * p2
    var t3
    t3 = p0[t2]
    var t4
    t4 = 4 * p1
    p0[t4] = t3
    var t5
    t5 = 4 * p2
    p0[t5] = T1
    return 0
end f_swap
f_heap_ajust [3]
    var T2 // dad
    T2 = p1
    var T3 // son
    var t6
    t6 = T2 * 2
    var t7
    t7 = t6 + 1
    T3 = t7
l0:
    var t8
    t8 = p2 + 1
    var t9
    t9 = T3 < t8
    if t9==0 goto l1
    var t10
    t10 = T3 < p2
    var t11
    if t10==0 goto l2
    var t12
    t12 = 4 * T3
    var t13
    t13 = p0[t12]
    var t14
    t14 = T3 + 1
    var t15
    t15 = 4 * t14
    var t16
    t16 = p0[t15]
    var t17
    t17 = t13 < t16
    if t17==0 goto l2
    t11 = 1
    goto l3
l2:
    t11 = 0
l3:
    if t11==0 goto l4
    var t18
    t18 = T3 + 1
    T3 = t18
l4:
    var t19
    t19 = 4 * T2
    var t20
    t20 = p0[t19]
    var t21
    t21 = 4 * T3
    var t22
    t22 = p0[t21]
    var t23
    t23 = t20 > t22
    if t23==0 goto l5
    return 0
    goto l6
l5:
    var t24
    param p0
    param T2
    param T3
    t24 = call f_swap
    T2 = t24
    T2 = T3
    var t25
    t25 = T2 * 2
    var t26
    t26 = t25 + 1
    T3 = t26
l6:
    goto l0
l1:
    return 0
end f_heap_ajust
f_heap_sort [2]
    var T4 // i
    var T5 // tmp
    var t27
    t27 = p1 / 2
    var t28
    t28 = t27 - 1
    T4 = t28
l7:
    var t29
    t29 = - 1
    var t30
    t30 = T4 > t29
    if t30==0 goto l8
    var t31
    t31 = p1 - 1
    T5 = t31
    var t32
    param p0
    param T4
    param T5
    t32 = call f_heap_ajust
    T5 = t32
    var t33
    t33 = T4 - 1
    T4 = t33
    goto l7
l8:
    var t34
    t34 = p1 - 1
    T4 = t34
l9:
    var t35
    t35 = T4 > 0
    if t35==0 goto l10
    var T6 // tmp0
    T6 = 0
    var t36
    param p0
    param T6
    param T4
    t36 = call f_swap
    T5 = t36
    var t37
    t37 = T4 - 1
    T5 = t37
    var t38
    param p0
    param T6
    param T5
    t38 = call f_heap_ajust
    T5 = t38
    var t39
    t39 = T4 - 1
    T4 = t39
    goto l9
l10:
    return 0
end f_heap_sort
f_main [0]
    T0 = 10
    var 40 T7 // a[10]
    var t40
    t40 = 4 * 0
    T7[t40] = 4
    var t41
    t41 = 4 * 1
    T7[t41] = 3
    var t42
    t42 = 4 * 2
    T7[t42] = 9
    var t43
    t43 = 4 * 3
    T7[t43] = 2
    var t44
    t44 = 4 * 4
    T7[t44] = 0
    var t45
    t45 = 4 * 5
    T7[t45] = 1
    var t46
    t46 = 4 * 6
    T7[t46] = 6
    var t47
    t47 = 4 * 7
    T7[t47] = 5
    var t48
    t48 = 4 * 8
    T7[t48] = 7
    var t49
    t49 = 4 * 9
    T7[t49] = 8
    var T8 // i
    T8 = 0
    var t50
    param T7
    param T0
    t50 = call f_heap_sort
    T8 = t50
l11:
    var t51
    t51 = T8 < T0
    if t51==0 goto l12
    var T9 // tmp
    var t52
    t52 = 4 * T8
    var t53
    t53 = T7[t52]
    T9 = t53
    var t54
    param T9
    t54 = call f_putint
    T9 = t54
    T9 = 10
    var t55
    param T9
    t55 = call f_putchar
    T9 = t55
    var t56
    t56 = T8 + 1
    T8 = t56
    goto l11
l12:
    return 0
end f_main
