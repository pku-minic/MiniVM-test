v0 = 0
f_Merge [4] [76]
    load 5 t0
    t0 = a2 - a1
    load 6 t1
    t1 = t0 + 1
    load 4 t2
    t2 = t1
    load 8 t3
    t3 = a3 - a2
    load 7 t4
    t4 = t3
    load 29 t5
    t5 = 0
    load 30 t6
    t6 = 0
    store t2 4
    store t4 7
    store t5 29
    store t6 30
    store a0 0
    store a1 1
    store a2 2
l0:
    load 31 t0
    load 29 t1
    load 4 t2
    t0 = t1 < t2
    store t0 31
    if t0 == x0 goto l1
    load 32 t0
    load 29 t1
    load 1 t2
    t0 = t1 + t2
    load 33 t3
    t4 = 4
    t3 = t4 * t0
    load 34 t5
    load 0 t6
    s1 = t6 + t3
    t5 = s1 [0]
    load 35 s2
    s3 = 4
    s2 = s3 * t1
    loadaddr 9 s4
    s5 = s4 + s2
    s5 [0] = t5
    load 36 s6
    s6 = t1 + 1
    t1 = s6
    store t1 29
    goto l0
    store t1 29
l1:
l2:
    load 37 t0
    load 30 t1
    load 7 t2
    t0 = t1 < t2
    store t0 37
    if t0 == x0 goto l3
    load 38 t0
    load 30 t1
    load 2 t2
    t0 = t1 + t2
    load 39 t3
    t3 = t0 + 1
    load 40 t4
    t5 = 4
    t4 = t5 * t3
    load 41 t6
    load 0 s1
    s2 = s1 + t4
    t6 = s2 [0]
    load 42 s3
    s4 = 4
    s3 = s4 * t1
    loadaddr 19 s5
    s6 = s5 + s3
    s6 [0] = t6
    load 43 s7
    s7 = t1 + 1
    t1 = s7
    store t1 30
    goto l2
l3:
    load 29 t0
    t0 = 0
    load 30 t1
    t1 = 0
    load 44 t2
    load 1 t3
    t2 = t3
    store t0 29
    store t1 30
    store t2 44
l4:
    load 45 t0
    load 29 t1
    load 4 t2
    t0 = t1 != t2
    store t0 45
    if t0 == x0 goto l6
    load 47 t0
    load 30 t1
    load 7 t2
    t0 = t1 != t2
    store t0 47
    if t0 == x0 goto l6
    load 46 t0
    t0 = 1
    store t0 46
    goto l7
l6:
    load 46 t0
    t0 = 0
    store t0 46
l7:
    load 46 t0
    if t0 == x0 goto l5
    load 48 t0
    load 29 t1
    t2 = 4
    t0 = t2 * t1
    load 49 t3
    loadaddr 9 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 50 t6
    load 30 s1
    s2 = 4
    t6 = s2 * s1
    load 51 s3
    loadaddr 19 s4
    s5 = s4 + t6
    s3 = s5 [0]
    load 52 s6
    s6 = s3 + 1
    load 53 s7
    s7 = t3 < s6
    store s7 53
    if s7 == x0 goto l8
    load 54 t0
    load 29 t1
    t2 = 4
    t0 = t2 * t1
    load 55 t3
    loadaddr 9 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 56 t6
    load 44 s1
    s2 = 4
    t6 = s2 * s1
    load 0 s3
    s4 = s3 + t6
    s4 [0] = t3
    load 57 s5
    s5 = s1 + 1
    s1 = s5
    load 58 s6
    s6 = t1 + 1
    t1 = s6
    store s1 44
    store t1 29
    goto l9
l8:
    load 59 t0
    load 30 t1
    t2 = 4
    t0 = t2 * t1
    load 60 t3
    loadaddr 19 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 61 t6
    load 44 s1
    s2 = 4
    t6 = s2 * s1
    load 0 s3
    s4 = s3 + t6
    s4 [0] = t3
    load 62 s5
    s5 = s1 + 1
    s1 = s5
    load 63 s6
    s6 = t1 + 1
    t1 = s6
    store s1 44
    store s6 63
    store t1 30
l9:
    goto l4
l5:
l10:
    load 64 t0
    load 29 t1
    load 4 t2
    t0 = t1 < t2
    store t0 64
    if t0 == x0 goto l11
    load 65 t0
    load 29 t1
    t2 = 4
    t0 = t2 * t1
    load 66 t3
    loadaddr 9 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 67 t6
    load 44 s1
    s2 = 4
    t6 = s2 * s1
    load 0 s3
    s4 = s3 + t6
    s4 [0] = t3
    load 68 s5
    s5 = s1 + 1
    s1 = s5
    load 69 s6
    s6 = t1 + 1
    t1 = s6
    store s1 44
    store t1 29
    goto l10
    store s1 44
l11:
l12:
    load 70 t0
    load 30 t1
    load 7 t2
    t0 = t1 < t2
    store t0 70
    if t0 == x0 goto l13
    load 71 t0
    load 30 t1
    t2 = 4
    t0 = t2 * t1
    load 72 t3
    loadaddr 19 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 73 t6
    load 44 s1
    s2 = 4
    t6 = s2 * s1
    load 0 s3
    s4 = s3 + t6
    s4 [0] = t3
    load 74 s5
    s5 = s1 + 1
    s1 = s5
    load 75 s6
    s6 = t1 + 1
    t1 = s6
    store s1 44
    store t1 30
    goto l12
l13:
    a0 = 0
    return
end f_Merge
f_MergeSort [3] [12]
    load 3 t0
    t0 = a1 < a2
    store t0 3
    store a0 0
    store a1 1
    store a2 2
    if t0 == x0 goto l14
    load 5 t0
    load 1 t1
    load 2 t2
    t0 = t1 + t2
    load 6 t3
    t4 = 2
    t3 = t0 / t4
    load 4 t5
    t5 = t3
    load 0 a0
    a1 = t1
    a2 = t5
    store t5 4
    call f_MergeSort
    load 7 t0
    t0 = a0
    load 9 t1
    load 4 t2
    t1 = t2 + 1
    t0 = t1
    load 0 a0
    a1 = t0
    load 2 a2
    call f_MergeSort
    t0 = a0
    load 0 a0
    load 1 a1
    load 4 a2
    load 2 a3
    call f_Merge
    t0 = a0
    store a0 11
l14:
    a0 = 0
    return
end f_MergeSort
f_main [0] [30]
    load v0 t0
    t0 = 10
    load 10 t1
    t1 = 0
    loadaddr 0 t2
    t3 = 4
    t4 = t2 + t1
    t4 [0] = t3
    load 11 t5
    t5 = 4
    t6 = 3
    s1 = t2 + t5
    s1 [0] = t6
    load 12 s2
    s2 = 8
    s3 = 9
    s4 = t2 + s2
    s4 [0] = s3
    load 13 s5
    s5 = 12
    s6 = 2
    s7 = t2 + s5
    s7 [0] = s6
    load 14 s8
    s8 = 16
    s9 = t2 + s8
    s9 [0] = x0
    load 15 s10
    s10 = 20
    s11 = 1
    a0 = t2 + s10
    a0 [0] = s11
    load 16 a1
    a1 = 24
    a2 = 6
    a3 = t2 + a1
    a3 [0] = a2
    load 17 a4
    a4 = 28
    a5 = 5
    a6 = t2 + a4
    a6 [0] = a5
    load 18 a7
    a7 = 32
    t1 = 7
    t3 = t2 + a7
    t3 [0] = t1
    load 19 t1
    t1 = 36
    t3 = 8
    t4 = t2 + t1
    t4 [0] = t3
    load 20 t1
    t1 = 0
    load 22 t3
    t3 = t0 + -1
    load 21 t4
    t4 = t3
    a0 = t2
    a1 = t1
    a2 = t4
    loadaddr v0 s0
    s0 [0] = t0
    store t1 20
    store t4 21
    call f_MergeSort
    load 20 t0
    t0 = a0
    store t0 20
    store a0 23
l15:
    load 24 t0
    load 20 t1
    load v0 t2
    t0 = t1 < t2
    store t0 24
    if t0 == x0 goto l16
    load 25 t0
    load 20 t1
    t2 = 4
    t0 = t2 * t1
    load 26 t3
    loadaddr 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 21 t6
    t6 = t3
    a0 = t6
    store t6 21
    call f_putint
    load 21 t0
    t0 = a0
    t0 = 10
    a0 = t0
    call f_putch
    t0 = a0
    load 29 t1
    load 20 t3
    t1 = t3 + 1
    t3 = t1
    store t3 20
    goto l15
l16:
    a0 = 0
    return
end f_main
