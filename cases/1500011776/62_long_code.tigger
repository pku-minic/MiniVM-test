v0 = 0
f_bubblesort [1] [25]
    load 1 t0
    t0 = 0
    store t0 1
    store a0 0
l0:
    load 3 t0
    load v0 t1
    t0 = t1 + -1
    load 4 t2
    load 1 t3
    t2 = t3 < t0
    store t2 4
    if t2 == x0 goto l1
    load 2 t0
    t0 = 0
    store t0 2
l2:
    load 5 t0
    load v0 t1
    load 1 t2
    t0 = t1 - t2
    load 6 t3
    t3 = t0 + -1
    load 7 t4
    load 2 t5
    t4 = t5 < t3
    store t4 7
    if t4 == x0 goto l3
    load 8 t0
    load 2 t1
    t2 = 4
    t0 = t2 * t1
    load 9 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 10 t6
    t6 = t1 + 1
    load 11 s1
    s2 = 4
    s1 = s2 * t6
    load 12 s3
    s4 = t4 + s1
    s3 = s4 [0]
    load 13 s5
    s5 = t3 > s3
    store s5 13
    if s5 == x0 goto l4
    load 15 t0
    load 2 t1
    t0 = t1 + 1
    load 16 t2
    t3 = 4
    t2 = t3 * t0
    load 17 t4
    load 0 t5
    t6 = t5 + t2
    t4 = t6 [0]
    load 14 s1
    s1 = t4
    load 18 s2
    s3 = 4
    s2 = s3 * t1
    load 19 s4
    s5 = t5 + s2
    s4 = s5 [0]
    load 20 s6
    s6 = t1 + 1
    load 21 s7
    s8 = 4
    s7 = s8 * s6
    s9 = t5 + s7
    s9 [0] = s4
    load 22 s10
    s11 = 4
    s10 = s11 * t1
    a0 = t5 + s10
    a0 [0] = s1
    store s1 14
    store s10 22
l4:
    load 23 t0
    load 2 t1
    t0 = t1 + 1
    t1 = t0
    store t1 2
    goto l2
l3:
    load 24 t0
    load 1 t1
    t0 = t1 + 1
    t1 = t0
    store t1 1
    goto l0
l1:
    a0 = 0
    return
end f_bubblesort
f_insertsort [1] [22]
    load 1 t0
    t0 = 1
    store t0 1
    store a0 0
l5:
    load 2 t0
    load 1 t1
    load v0 t2
    t0 = t1 < t2
    store t0 2
    if t0 == x0 goto l6
    load 4 t0
    load 1 t1
    t2 = 4
    t0 = t2 * t1
    load 5 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 3 t6
    t6 = t3
    load 7 s1
    s1 = t1 + -1
    load 6 s2
    s2 = s1
    store s1 7
    store s2 6
    store t6 3
l7:
    load 8 t0
    t0 = -1
    load 9 t1
    load 6 t2
    t1 = t2 > t0
    store t1 9
    if t1 == x0 goto l9
    load 11 t0
    load 6 t1
    t2 = 4
    t0 = t2 * t1
    load 12 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 13 t6
    load 3 s1
    t6 = s1 < t3
    store t6 13
    if t6 == x0 goto l9
    load 10 t0
    t0 = 1
    store t0 10
    goto l10
l9:
    load 10 t0
    t0 = 0
    store t0 10
l10:
    load 10 t0
    if t0 == x0 goto l8
    load 14 t0
    load 6 t1
    t2 = 4
    t0 = t2 * t1
    load 15 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 16 t6
    t6 = t1 + 1
    load 17 s1
    s2 = 4
    s1 = s2 * t6
    s3 = t4 + s1
    s3 [0] = t3
    load 18 s4
    s4 = t1 + -1
    t1 = s4
    store t1 6
    goto l7
l8:
    load 19 t0
    load 6 t1
    t0 = t1 + 1
    load 20 t2
    t3 = 4
    t2 = t3 * t0
    load 0 t4
    load 3 t5
    t6 = t4 + t2
    t6 [0] = t5
    load 21 s1
    load 1 s2
    s1 = s2 + 1
    s2 = s1
    store s2 1
    goto l5
l6:
    a0 = 0
    return
end f_insertsort
f_QuickSort [3] [39]
    load 3 t0
    t0 = a1 < a2
    store t0 3
    store a0 0
    store a1 1
    store a2 2
    if t0 == x0 goto l11
    load 4 t0
    load 1 t1
    t0 = t1
    load 5 t2
    load 2 t3
    t2 = t3
    load 7 t4
    t5 = 4
    t4 = t5 * t1
    load 8 t6
    load 0 s1
    s2 = s1 + t4
    t6 = s2 [0]
    load 6 s3
    s3 = t6
    store s3 6
    store t0 4
    store t2 5
    store t6 8
l12:
    load 9 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 9
    if t0 == x0 goto l13
l14:
    load 10 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 10
    if t0 == x0 goto l16
    load 12 t0
    load 5 t1
    t2 = 4
    t0 = t2 * t1
    load 13 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 14 t6
    load 6 s1
    t6 = s1 + -1
    load 15 s2
    s2 = t3 > t6
    store s2 15
    if s2 == x0 goto l16
    load 11 t0
    t0 = 1
    store t0 11
    goto l17
l16:
    load 11 t0
    t0 = 0
    store t0 11
l17:
    load 11 t0
    if t0 == x0 goto l15
    load 16 t0
    load 5 t1
    t0 = t1 + -1
    t1 = t0
    store t1 5
    goto l14
l15:
    load 17 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 17
    if t0 == x0 goto l18
    load 18 t0
    load 5 t1
    t2 = 4
    t0 = t2 * t1
    load 19 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 20 t6
    load 4 s1
    s2 = 4
    t6 = s2 * s1
    s3 = t4 + t6
    s3 [0] = t3
    load 21 s4
    s4 = s1 + 1
    s1 = s4
    store s1 4
    store s4 21
    store s1 4
l18:
l19:
    load 22 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 22
    if t0 == x0 goto l21
    load 24 t0
    load 4 t1
    t2 = 4
    t0 = t2 * t1
    load 25 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 26 t6
    load 6 s1
    t6 = t3 < s1
    store t6 26
    if t6 == x0 goto l21
    load 23 t0
    t0 = 1
    store t0 23
    goto l22
l21:
    load 23 t0
    t0 = 0
    store t0 23
l22:
    load 23 t0
    if t0 == x0 goto l20
    load 27 t0
    load 4 t1
    t0 = t1 + 1
    t1 = t0
    store t1 4
    goto l19
l20:
    load 28 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 28
    if t0 == x0 goto l23
    load 29 t0
    load 4 t1
    t2 = 4
    t0 = t2 * t1
    load 30 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 31 t6
    load 5 s1
    s2 = 4
    t6 = s2 * s1
    s3 = t4 + t6
    s3 [0] = t3
    load 32 s4
    s4 = s1 + -1
    s1 = s4
    store s1 5
    store s4 32
l23:
    goto l12
l13:
    load 33 t0
    load 4 t1
    t2 = 4
    t0 = t2 * t1
    load 0 t3
    load 6 t4
    t5 = t3 + t0
    t5 [0] = t4
    load 35 t6
    t6 = t1 + -1
    load 34 s1
    s1 = t6
    a0 = t3
    load 1 a1
    a2 = s1
    store s1 34
    call f_QuickSort
    load 34 t0
    t0 = a0
    load 37 t1
    load 4 t3
    t1 = t3 + 1
    t0 = t1
    load 0 a0
    a1 = t0
    load 2 a2
    call f_QuickSort
    t0 = a0
    store a0 38
l11:
    a0 = 0
    return
end f_QuickSort
f_getMid [1] [15]
    load 2 t0
    load v0 t1
    t2 = 2
    t0 = t1 % t2
    load 3 t3
    t3 = t0 == x0
    store t3 3
    store a0 0
    if t3 == x0 goto l24
    load 4 t0
    load v0 t1
    t2 = 2
    t0 = t1 / t2
    load 1 t3
    t3 = t0
    load 5 t4
    t5 = 4
    t4 = t5 * t3
    load 6 t6
    load 0 s1
    s2 = s1 + t4
    t6 = s2 [0]
    load 7 s3
    s3 = t3 + -1
    load 8 s4
    s5 = 4
    s4 = s5 * s3
    load 9 s6
    s7 = s1 + s4
    s6 = s7 [0]
    load 10 s8
    s8 = t6 + s6
    load 11 s9
    s10 = 2
    s9 = s8 / s10
    a0 = s9
    store s9 11
    store t3 1
    return
    goto l25
l24:
    load 12 t0
    load v0 t1
    t2 = 2
    t0 = t1 / t2
    load 1 t3
    t3 = t0
    load 13 t4
    t5 = 4
    t4 = t5 * t3
    load 14 t6
    load 0 s1
    s2 = s1 + t4
    t6 = s2 [0]
    a0 = t6
    store t6 14
    return
l25:
end f_getMid
f_getMost [1] [1021]
    load 1001 t0
    t0 = 0
    store t0 1001
    store a0 0
l26:
    load 1002 t0
    load 1001 t1
    t0 = t1 < 1000
    store t0 1002
    if t0 == x0 goto l27
    load 1003 t0
    load 1001 t1
    t2 = 4
    t0 = t2 * t1
    loadaddr 1 t3
    t4 = t3 + t0
    t4 [0] = x0
    load 1004 t5
    t5 = t1 + 1
    t1 = t5
    store t1 1001
    goto l26
l27:
    load 1001 t0
    t0 = 0
    load 1005 t1
    t1 = 0
    store t0 1001
    store t1 1005
l28:
    load 1007 t0
    load 1001 t1
    load v0 t2
    t0 = t1 < t2
    store t0 1007
    if t0 == x0 goto l29
    load 1009 t0
    load 1001 t1
    t2 = 4
    t0 = t2 * t1
    load 1010 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 1008 t6
    t6 = t3
    load 1011 s1
    s2 = 4
    s1 = s2 * t6
    load 1012 s3
    loadaddr 1 s4
    s5 = s4 + s1
    s3 = s5 [0]
    load 1013 s6
    s6 = s3 + 1
    load 1014 s7
    s8 = 4
    s7 = s8 * t6
    s9 = s4 + s7
    s9 [0] = s6
    load 1015 s10
    s11 = 4
    s10 = s11 * t6
    load 1016 a0
    a1 = s4 + s10
    a0 = a1 [0]
    load 1017 a2
    load 1005 a3
    a2 = a0 > a3
    store t6 1008
    store a2 1017
    if a2 == x0 goto l30
    load 1018 t0
    load 1008 t1
    t2 = 4
    t0 = t2 * t1
    load 1019 t3
    loadaddr 1 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 1005 t6
    t6 = t3
    load 1006 s1
    s1 = t1
    store s1 1006
    store t6 1005
l30:
    load 1020 t0
    load 1001 t1
    t0 = t1 + 1
    t1 = t0
    store t1 1001
    goto l28
l29:
    load 1006 a0
    return
end f_getMost
f_revert [1] [13]
    load 2 t0
    t0 = 0
    load 3 t1
    t1 = 0
    store t0 2
    store t1 3
    store a0 0
l31:
    load 4 t0
    load 2 t1
    load 3 t2
    t0 = t1 < t2
    store t0 4
    if t0 == x0 goto l32
    load 5 t0
    load 2 t1
    t2 = 4
    t0 = t2 * t1
    load 6 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 1 t6
    t6 = t3
    load 7 s1
    load 3 s2
    s3 = 4
    s1 = s3 * s2
    load 8 s4
    s5 = t4 + s1
    s4 = s5 [0]
    load 9 s6
    s7 = 4
    s6 = s7 * t1
    s8 = t4 + s6
    s8 [0] = s4
    load 10 s9
    s10 = 4
    s9 = s10 * s2
    s11 = t4 + s9
    s11 [0] = t6
    load 11 a0
    a0 = t1 + 1
    t1 = a0
    load 12 a1
    a1 = s2 + -1
    s2 = a1
    store s2 3
    store t1 2
    goto l31
l32:
    a0 = 0
    return
end f_revert
f_arrCopy [2] [8]
    load 2 t0
    t0 = 0
    store t0 2
    store a0 0
    store a1 1
l33:
    load 3 t0
    load 2 t1
    load v0 t2
    t0 = t1 < t2
    store t0 3
    if t0 == x0 goto l34
    load 4 t0
    load 2 t1
    t2 = 4
    t0 = t2 * t1
    load 5 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 6 t6
    s1 = 4
    t6 = s1 * t1
    load 1 s2
    s3 = s2 + t6
    s3 [0] = t3
    load 7 s4
    s4 = t1 + 1
    t1 = s4
    store t1 2
    goto l33
l34:
    a0 = 0
    return
end f_arrCopy
f_calSum [2] [14]
    load 2 t0
    t0 = 0
    load 3 t1
    t1 = 0
    store t0 2
    store t1 3
    store a0 0
    store a1 1
l35:
    load 4 t0
    load 3 t1
    load v0 t2
    t0 = t1 < t2
    store t0 4
    if t0 == x0 goto l36
    load 5 t0
    load 3 t1
    t2 = 4
    t0 = t2 * t1
    load 6 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 7 t6
    load 2 s1
    t6 = s1 + t3
    s1 = t6
    load 8 s2
    load 1 s3
    s2 = t1 % s3
    load 9 s4
    s4 = s3 + -1
    load 10 s5
    s5 = s2 != s4
    store s1 2
    store s5 10
    if s5 == x0 goto l37
    load 11 t0
    load 3 t1
    t2 = 4
    t0 = t2 * t1
    load 0 t3
    t4 = t3 + t0
    t4 [0] = x0
    goto l38
l37:
    load 12 t0
    load 3 t1
    t2 = 4
    t0 = t2 * t1
    load 0 t3
    load 2 t4
    t5 = t3 + t0
    t5 [0] = t4
    t4 = 0
    store t4 2
l38:
    load 13 t0
    load 3 t1
    t0 = t1 + 1
    t1 = t0
    store t1 3
    goto l35
l36:
    a0 = 0
    return
end f_calSum
f_avgPooling [2] [35]
    load 3 t0
    t0 = 0
    load 2 t1
    t1 = 0
    store t0 3
    store t1 2
    store a0 0
    store a1 1
l39:
    load 5 t0
    load 3 t1
    load v0 t2
    t0 = t1 < t2
    store t0 5
    if t0 == x0 goto l40
    load 6 t0
    load 1 t1
    t0 = t1 + -1
    load 7 t2
    load 3 t3
    t2 = t3 < t0
    store t2 7
    if t2 == x0 goto l41
    load 8 t0
    load 3 t1
    t2 = 4
    t0 = t2 * t1
    load 9 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 10 t6
    load 2 s1
    t6 = s1 + t3
    s1 = t6
    store s1 2
    goto l42
l41:
    load 11 t0
    load 1 t1
    t0 = t1 + -1
    load 12 t2
    load 3 t3
    t2 = t3 == t0
    store t2 12
    if t2 == x0 goto l43
    load 13 t0
    t0 = 0
    load 14 t1
    load 0 t2
    t3 = t2 + t0
    t1 = t3 [0]
    load 4 t4
    t4 = t1
    load 15 t5
    load 2 t6
    load 1 s1
    t5 = t6 / s1
    load 16 s2
    s2 = 0
    s3 = t2 + s2
    s3 [0] = t5
    store t4 4
    goto l44
l43:
    load 17 t0
    load 3 t1
    t2 = 4
    t0 = t2 * t1
    load 18 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 19 t6
    load 2 s1
    t6 = s1 + t3
    load 20 s2
    load 4 s3
    s2 = t6 - s3
    s1 = s2
    load 21 s4
    load 1 s5
    s4 = t1 - s5
    load 22 s6
    s6 = s4 + 1
    load 23 s7
    s8 = 4
    s7 = s8 * s6
    load 24 s9
    s10 = t4 + s7
    s9 = s10 [0]
    s3 = s9
    load 25 s11
    s11 = s1 / s5
    load 26 a0
    a0 = t1 - s5
    load 27 a1
    a1 = a0 + 1
    load 28 a2
    a3 = 4
    a2 = a3 * a1
    a4 = t4 + a2
    a4 [0] = s11
    store s1 2
    store s3 4
    store s11 25
    store a2 28
    store s1 2
    store s3 4
l44:
l42:
    load 29 t0
    load 3 t1
    t0 = t1 + 1
    t1 = t0
    store t1 3
    goto l39
l40:
    load 30 t0
    load v0 t1
    load 1 t2
    t0 = t1 - t2
    load 31 t3
    t3 = t0 + 1
    load 3 t4
    t4 = t3
    store t3 31
    store t4 3
l45:
    load 32 t0
    load 3 t1
    load v0 t2
    t0 = t1 < t2
    store t0 32
    if t0 == x0 goto l46
    load 33 t0
    load 3 t1
    t2 = 4
    t0 = t2 * t1
    load 0 t3
    t4 = t3 + t0
    t4 [0] = x0
    load 34 t5
    t5 = t1 + 1
    t1 = t5
    store t1 3
    goto l45
l46:
    a0 = 0
    return
end f_avgPooling
f_main [0] [150]
    load v0 t0
    t0 = 32
    load 64 t1
    t1 = 0
    loadaddr 0 t2
    t3 = 7
    t4 = t2 + t1
    t4 [0] = t3
    load 65 t5
    t5 = 4
    t6 = 23
    s1 = t2 + t5
    s1 [0] = t6
    load 66 s2
    s2 = 8
    s3 = 89
    s4 = t2 + s2
    s4 [0] = s3
    load 67 s5
    s5 = 12
    s6 = 26
    s7 = t2 + s5
    s7 [0] = s6
    load 68 s8
    s8 = 16
    s9 = 282
    s10 = t2 + s8
    s10 [0] = s9
    load 69 s11
    s11 = 20
    a0 = 254
    a1 = t2 + s11
    a1 [0] = a0
    load 70 a2
    a2 = 24
    a3 = 27
    a4 = t2 + a2
    a4 [0] = a3
    load 71 a5
    a5 = 28
    a6 = 5
    a7 = t2 + a5
    a7 [0] = a6
    loadaddr v0 s0
    s0 [0] = t0
    load 72 t0
    t0 = 32
    t1 = 83
    t3 = t2 + t0
    t3 [0] = t1
    load 73 t0
    t0 = 36
    t1 = 273
    t3 = t2 + t0
    t3 [0] = t1
    load 74 t0
    t0 = 40
    t1 = 574
    t3 = t2 + t0
    t3 [0] = t1
    load 75 t0
    t0 = 44
    t1 = 905
    t3 = t2 + t0
    t3 [0] = t1
    load 76 t0
    t0 = 48
    t1 = 354
    t3 = t2 + t0
    t3 [0] = t1
    load 77 t0
    t0 = 52
    t1 = 657
    t3 = t2 + t0
    t3 [0] = t1
    load 78 t0
    t0 = 56
    t1 = 935
    t3 = t2 + t0
    t3 [0] = t1
    load 79 t0
    t0 = 60
    t1 = 264
    t3 = t2 + t0
    t3 [0] = t1
    load 80 t0
    t0 = 64
    t1 = 639
    t3 = t2 + t0
    t3 [0] = t1
    load 81 t0
    t0 = 68
    t1 = 459
    t3 = t2 + t0
    t3 [0] = t1
    load 82 t0
    t0 = 72
    t1 = 29
    t3 = t2 + t0
    t3 [0] = t1
    load 83 t0
    t0 = 76
    t1 = 68
    t3 = t2 + t0
    t3 [0] = t1
    load 84 t0
    t0 = 80
    t1 = 929
    t3 = t2 + t0
    t3 [0] = t1
    load 85 t0
    t0 = 84
    t1 = 756
    t3 = t2 + t0
    t3 [0] = t1
    load 86 t0
    t0 = 88
    t1 = 452
    t3 = t2 + t0
    t3 [0] = t1
    load 87 t0
    t0 = 92
    t1 = 279
    t3 = t2 + t0
    t3 [0] = t1
    load 88 t0
    t0 = 96
    t1 = 58
    t3 = t2 + t0
    t3 [0] = t1
    load 89 t0
    t0 = 100
    t1 = 87
    t3 = t2 + t0
    t3 [0] = t1
    load 90 t0
    t0 = 104
    t1 = 96
    t3 = t2 + t0
    t3 [0] = t1
    load 91 t0
    t0 = 108
    t1 = 36
    t3 = t2 + t0
    t3 [0] = t1
    load 92 t0
    t0 = 112
    t1 = 39
    t3 = t2 + t0
    t3 [0] = t1
    load 93 t0
    t0 = 116
    t1 = 28
    t3 = t2 + t0
    t3 [0] = t1
    load 94 t0
    t0 = 120
    t1 = 1
    t3 = t2 + t0
    t3 [0] = t1
    load 95 t0
    t0 = 124
    t1 = 290
    t3 = t2 + t0
    t3 [0] = t1
    a0 = t2
    loadaddr 32 a1
    call f_arrCopy
    load 96 t0
    t0 = a0
    loadaddr 32 a0
    store t0 96
    call f_revert
    load 96 t0
    t0 = a0
    load 99 t2
    t2 = 0
    store t0 96
    store t2 99
l47:
    load 100 t0
    load 99 t1
    t0 = t1 < 32
    store t0 100
    if t0 == x0 goto l48
    load 101 t0
    load 99 t1
    t2 = 4
    t0 = t2 * t1
    load 102 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 96 t6
    t6 = t3
    a0 = t6
    store t6 96
    call f_putint
    load 96 t0
    t0 = a0
    load 104 t1
    load 99 t3
    t1 = t3 + 1
    t3 = t1
    store t0 96
    store t3 99
    goto l47
l48:
    loadaddr 32 a0
    call f_bubblesort
    load 96 t0
    t0 = a0
    load 99 t1
    t1 = 0
    store t0 96
    store t1 99
l49:
    load 106 t0
    load 99 t1
    t0 = t1 < 32
    store t0 106
    if t0 == x0 goto l50
    load 107 t0
    load 99 t1
    t2 = 4
    t0 = t2 * t1
    load 108 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 96 t6
    t6 = t3
    a0 = t6
    store t6 96
    call f_putint
    load 96 t0
    t0 = a0
    load 110 t1
    load 99 t3
    t1 = t3 + 1
    t3 = t1
    store t0 96
    store t3 99
    goto l49
l50:
    loadaddr 32 a0
    call f_getMid
    load 96 t0
    t0 = a0
    a0 = t0
    store t0 96
    call f_putint
    load 96 t0
    t0 = a0
    loadaddr 32 a0
    store t0 96
    call f_getMost
    load 96 t0
    t0 = a0
    a0 = t0
    store t0 96
    call f_putint
    load 96 t0
    t0 = a0
    loadaddr 0 a0
    loadaddr 32 a1
    store t0 96
    call f_arrCopy
    load 96 t0
    t0 = a0
    loadaddr 32 a0
    store t0 96
    call f_bubblesort
    load 96 t0
    t0 = a0
    load 99 t1
    t1 = 0
    store t0 96
    store t1 99
l51:
    load 117 t0
    load 99 t1
    t0 = t1 < 32
    store t0 117
    if t0 == x0 goto l52
    load 118 t0
    load 99 t1
    t2 = 4
    t0 = t2 * t1
    load 119 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 96 t6
    t6 = t3
    a0 = t6
    store t6 96
    call f_putint
    load 96 t0
    t0 = a0
    load 121 t1
    load 99 t3
    t1 = t3 + 1
    t3 = t1
    store t0 96
    store t3 99
    goto l51
l52:
    loadaddr 0 a0
    loadaddr 32 a1
    call f_arrCopy
    load 96 t0
    t0 = a0
    loadaddr 32 a0
    store t0 96
    call f_insertsort
    load 96 t0
    t0 = a0
    load 99 t1
    t1 = 0
    store t0 96
    store t1 99
l53:
    load 124 t0
    load 99 t1
    t0 = t1 < 32
    store t0 124
    if t0 == x0 goto l54
    load 125 t0
    load 99 t1
    t2 = 4
    t0 = t2 * t1
    load 126 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 96 t6
    t6 = t3
    a0 = t6
    store t6 96
    call f_putint
    load 96 t0
    t0 = a0
    load 128 t1
    load 99 t3
    t1 = t3 + 1
    t3 = t1
    store t0 96
    store t3 99
    goto l53
l54:
    loadaddr 0 a0
    loadaddr 32 a1
    call f_arrCopy
    load 96 t0
    t0 = a0
    load 99 t1
    t1 = 0
    t0 = 31
    loadaddr 32 a0
    a1 = t1
    a2 = t0
    store t0 96
    store t1 99
    call f_QuickSort
    load 96 t0
    t0 = a0
    store t0 96
    store a0 130
l55:
    load 131 t0
    load 99 t1
    t0 = t1 < 32
    store t0 131
    if t0 == x0 goto l56
    load 132 t0
    load 99 t1
    t2 = 4
    t0 = t2 * t1
    load 133 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 96 t6
    t6 = t3
    a0 = t6
    store t6 96
    call f_putint
    load 96 t0
    t0 = a0
    load 135 t1
    load 99 t3
    t1 = t3 + 1
    t3 = t1
    store t0 96
    store t3 99
    goto l55
l56:
    loadaddr 0 a0
    loadaddr 32 a1
    call f_arrCopy
    load 96 t0
    t0 = a0
    loadaddr 32 a0
    a1 = 4
    store t0 96
    call f_calSum
    load 96 t0
    t0 = a0
    load 99 t1
    t1 = 0
    store t0 96
    store t1 99
l57:
    load 138 t0
    load 99 t1
    t0 = t1 < 32
    store t0 138
    if t0 == x0 goto l58
    load 139 t0
    load 99 t1
    t2 = 4
    t0 = t2 * t1
    load 140 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 96 t6
    t6 = t3
    a0 = t6
    store t6 96
    call f_putint
    load 96 t0
    t0 = a0
    load 142 t1
    load 99 t3
    t1 = t3 + 1
    t3 = t1
    store t0 96
    store t3 99
    goto l57
l58:
    loadaddr 0 a0
    loadaddr 32 a1
    call f_arrCopy
    load 96 t0
    t0 = a0
    loadaddr 32 a0
    a1 = 3
    store t0 96
    call f_avgPooling
    load 96 t0
    t0 = a0
    load 99 t1
    t1 = 0
    store t0 96
    store t1 99
l59:
    load 145 t0
    load 99 t1
    t0 = t1 < 32
    store t0 145
    if t0 == x0 goto l60
    load 146 t0
    load 99 t1
    t2 = 4
    t0 = t2 * t1
    load 147 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 96 t6
    t6 = t3
    a0 = t6
    call f_putint
    t0 = a0
    load 149 t1
    load 99 t3
    t1 = t3 + 1
    t3 = t1
    store t3 99
    goto l59
l60:
    a0 = 0
    return
end f_main
